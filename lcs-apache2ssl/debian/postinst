#! /bin/sh
# postinst script for LCS apache2ssl
set -e


MODULE="apache2ssl"
APACHE2CONF="/etc/apache2/lcs-main/01_redirect.conf"

# lecture d'un parametre lcs dans lcs_db.params

function get_lcsdb_params() {
  PARAMS=`echo  "SELECT value FROM params WHERE name='$1'"| mysql lcs_db -N`
  echo "$PARAMS"
}

case "$1" in
	install|configure)
            #
            # registration module type S in applis.lcs_db
            #
            APACHE2SSL=`/usr/bin/mysql -e "SELECT id from lcs_db.applis WHERE name='apache2ssl';"`
            VER=$(dpkg-query -f '${Version}' -W lcs-apache2ssl)
            if [ -z "$APACHE2SSL" ]; then
                /usr/bin/mysql -e "INSERT INTO lcs_db.applis (id, name, value, descr, num_maj, version, chemin, type) VALUES ('', '$MODULE', '1', 'Acces au service web via https  ', '$INDICEMAJNBR', '$VER', '$PATHMOD', 'S');"
            fi
            #
            # Enable mode ssl
            #
            echo "Enable mode ssl"
            a2enmod ssl
            #
            # Generate certificat
            #
            if [ ! -e /etc/apache2/ssl/server.crt -o ! -e /etc/apache2/ssl/server.key ]; then
              echo "Generation certificat SSL"
              FQN=`hostname -f`
              DOMAIN=$(get_lcsdb_params domain)
              COUNTRYNAME=$(get_lcsdb_params country)
              PROVINCENAME=$(get_lcsdb_params province)
              LOCALITYNAME=$(get_lcsdb_params locality)
              ORGANIZATIONNAME=$(get_lcsdb_params organization)
              ORGANIZATIONALUNITNAME=$(get_lcsdb_params organizationalunit)
              # apache2-ssl-cert.sh <FQN> <DOMAIN> <COUNTRYNAME> <PROVINCENAME> <LOCALITYNAME> <ORGANIZATIONNAME> <ORGANIZATIONALUNITNAME>
              /usr/share/lcs/scripts/apache2-ssl-cert.sh $FQN $DOMAIN $COUNTRYNAME $PROVINCENAME $LOCALITYNAME $ORGANIZATIONNAME $ORGANIZATIONALUNITNAME
            fi
            #
            # Add directive Listen
            #
            if grep -q "Listen 443" /etc/apache2/ports.conf; then
              echo "Ajout Directive Listen"
              echo "Listen 443" >> /etc/apache2/ports.conf
            fi
            #
            # Validate menu Certificat Apache SSL
            #
            echo "Mise en place menu Certificat Apache SSL"
            if [ `grep '\"/Admin/apachecert.php",\"lcs_is_admin\",' /tmp/50services.inc | wc -l` = "1" ]; then
                sed -i "s/.*apachecert.php.*/\t\t\"Certificat Apache SSL\",\"\/Admin\/apachecert.php\",\"lcs_is_admin\",/" /var/www/lcs/includes/menu.d/50services.inc
            else
                sed -i "s/.*apachecert.php.*/\t\t\"Certificat Apache SSL\",\"\/Admin\/apachecert.php\",\"lcs_is_admin\"/" /var/www/lcs/includes/menu.d/50services.inc
            fi
            #
            # Enable lcs-ssl
            #
            a2ensite lcs-ssl
            #
            # Enable redirect rule
            #
            cat >$APACHE2CONF <<EOF
                RewriteEngine        on
                RewriteCond          %{HTTPS} !=on
                RewriteRule ^(.*)?$ https://%{HTTP_HOST}%{REQUEST_URI}
EOF
            #
            # Add sudoers section
            #
            echo "Ajout entrée sudoers pour apache2-ssl-cert.sh"
            if [ `grep 'SECTION_APACHE2SSL' /etc/sudoers | wc -l` = "0" ]; then
              section_mgr --add apache2ssl /var/lib/lcs/apache2ssl/sudoers_apache2ssl_sectionfile /etc/sudoers
            fi
            #
            #  Apache2 differed restarting for web interface install module
            #
          echo "Rechargement configuration Apache2 dans 1mn"
          at now+1minutes <<END
/etc/init.d/apache2 restart
sleep 2
END
    	;;

    	abort-upgrade|abort-remove|abort-deconfigure)
    	;;

    	*)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    	;;
esac

#DEBHELPER#

exit 0
